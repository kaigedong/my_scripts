异步中：
> 实际处理这个调用的部件在完成后，通过`状态`、`通知`和`回调`来通知调用者

+ 状态很好理解，改变一个变量，轮询即可。
+ 通知？要怎么通知？
+ 回调？什么是回调

## 异步通知，那我要怎么通知你啊？

> 他拎了两瓶好酒去找FileIO商量： “兄弟， 我听说有一种异步保存的办法，  你那边能不能用下？  保存数据的时候起一个线程， 把主线程让回给我，保存好了再通知我，我也不用老是等你，是吧？”
>  FIleIO想了想说：“这样确实可以解决问题，但每天找我保存数据的人也很多，**而且我也不知道在完成数据的写入之后怎么通知你呢？**”
>  小张把两瓶好酒往前一推， “我们关系这么好，你再开个专属我的方法呗，**我在调用你的saveStrToFile方法的时候顺便把我的实例给你**，你搞完之后通过我的实例调用我的方法通知我就行啦。就调我的onResult()这个方法吧。这事要保密， 天知地知你知我知就行了”。

怎么通知，我调用你的时候就可以跟你说好啊。

我让你做一件事情，但是你做得很慢，并不能够立马返回给我结果，害我一直在那儿等着你给我返回结果，什么都做不了，我又是个急性子，真是郁闷。

程序是自上而下顺序执行的，很多时候后一步的操作依赖于前一步操作的返回结果，所以必须按照顺序依次执行，因为我们的代码就是这么写的。

如果我不想等，那我就需要把操作拆分解耦，解耦我可以做到，就是让后面的操作不一定非要等到前面操作的完成，不是非要依赖于前面的返回结果，也就是我不用等你了。把耗时的操作，对整体结构非关键部分的操作异步执行。

好想法。

可是异步执行完，你要通知我，对我说你帮我做好了啊。

我为什么要你通知我你做好了呢，换句话说，我为什么要知道异步的事情做好了呢？

因为，事情做好了，不管什么结果，我还要接着处理一下啊，不是说异步我丢给你了我就不管了，我只是暂时没空等你，我希望你给我开个后门，在背后帮我完成，做好了你还是要跟我说的，然后我还要继续处理的。

可是问题是，我做好了怎么通知你呢，并且到时候你还在不在我都不知道？

转换一下思路：一切是为了解决问题的，而不在于解决问题的方式。

你想让我做好后通知你，不就是你还想处理一下我的执行结果吗？既然这样，你让我做事的时候，直接把你本来想要处理的过程实例也一并跟我说了不就好了吗，这样到时候我做完了就知道帮你处理的，不然到时候我还不知道要怎么找你呢，也不知道那个时候你还在不在线。你说这样可以吗？

是啊，我怎么没想到呢，哈哈，你真聪明，我太笨了。那我需要给你传两个参数哈，一个是需要你帮我处理异步任务，一个是完成后的处理实例，这样到时候你就可以帮我处理了，我也不用在什么地方等着你来通知我了，哈哈。

你不用担心到时候怎么找我，我也不用在什么地方一直等你通知我。真好。

解决问题的本质是要认清楚问题的本质，有时候固有思维容易影响我们，所以要跳出固有的思维方式，用最直接的方式解决问题是最有效的方式。

------

上面有一个问题没说，我怎么做到把 我要你帮我做的任务发给你？

web不支持这种方式，所以这时候需要请出队列了。

> 其实这个AJAX是一样的，在进行异步请求的时候就把回调的匿名函数当做参数传给它了，在等待服务端返回的过程中并不会紫塞主线程，这是一个异步的操作，响应完成后它就会自己调用之前传递给它的匿名函数。其实ajax就像是一个运行在客户端的客户端软件一样，它支持这种模式，原理是因为客户端在主线程之外还有一个事件循环的机制，但是web服务端，B/S这种架构的软件并不支持这种模式，一个请求处理完成后必须立即返回给客户端，客户端才能够收到http响应，才算完成一次请求，并且http是无状态的，服务端不能够和客户端进行主动通信，这不是web服务能力的问题，而是由web服务的本质所决定的，所以这种异步，回调的方式想要用在服务端就要换一种方式了，那就是队列。

[Java 帝国之消息队列](http://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&mid=2665513507&idx=1&sn=d6db79c1ae03ba9260fb0fb77727bb54&chksm=80d67a60b7a1f376e7ad1e2c3276e8b565f045b1c7e21ef90926f69d99f969557737eb5d8128&scene=21#wechat_redirect)

> 晚上到家，小张苦思悯想：  原来订单系统和库存系统都在一个虚拟机中，  处理起来很方便， 但是现在是个远程的Web服务， 酒鬼小李不给我返回结果， 我就没法结束， 这是典型的同步操作， 能不能改成异步的呢？
>  我把一个订单包裹发给小李， 他什么时候处理我就不用管了， 这样我这边的效率就会大大的提高！   可是现在的Web服务并不支持这种方式， 我怎么才能把包裹发过去呢？

------

[小李的数据库之旅（上）](http://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&mid=2665513312&idx=1&sn=f0c3e5623cc1042fa486c91c5d0ec6d4&scene=21#wechat_redirect)

> “所有计算机的问题都可以通过增加一个中间层来解决”

------

### 思考

web服务中，客户端一次请求后，服务端应该立马返回并断开，越快越好，这样用户就会感觉很快，PHP有ob_flush  ，其实也可以在不断开，一直往浏览器推送数据，但是这样的体验并不好，因为用户如果感觉浏览器加载的圈圈一直在转的话，他会觉得这个网站打开好慢，因为在所有人的主观意识中，网站应该就是建立请求后，响应完成后应该就立马断开，这样才体现网站访问速度很快。并且如果你想用AJAX和ob_flush来配合做，其实也不现实，[它对ajax是无效的](http://blog.csdn.net/u011832039/article/details/51387548)，因为ajax是要在服务端响应完成后才执行的，所以服务端软件和客户端软件有很大的本质区别，不想客户端软件，进程在本地，异步使用起来就很方便，在服务端就要转变一些思路，换一种方式了。

来自：https://www.kancloud.cn/xiak/php-node/356621
好文章！



## 回调！
https://www.zhihu.com/question/19801131

同步调用、回调和异步调用


